#! /usr/bin/env python
__author__ = "Alexander Merritt"
__email__ = "merritt.alex@gatech.edu"

import os
import commands
import sys

gcc = 'gcc'

ccflags = ['-Wall', '-Wextra', '-Werror', '-Winline', '-ggdb']
ccflags.extend(['-Wno-unused-parameter', '-Wno-unused-function'])

cpath = [os.getcwd() + '/../inc']

libpath = [os.getcwd() + '/../lib']
libs = ['ocm', 'rt']

if int(ARGUMENTS.get('timing', 0)): # add timing macro to allow for use of in-place timers
      ccflags.extend(['-DTIMING'])

if int(ARGUMENTS.get('filter', 0)): # prefix gccfilter to assist with compilation
    gcc = gccfilter + gcc

if int(ARGUMENTS.get('dbg', 0)): # prefix gccfilter to assist with compilation
    ccflags.append('-ggdb')

env = Environment(CC = gcc, CCFLAGS = ccflags, CPPPATH = cpath)
env.Append(LIBPATH = libpath, LIBS = libs)

files = os.listdir('.')
for f in files:
    (name,ext) = os.path.splitext(f)
    if '.c' == ext.lower():
        bin = env.Program(name, [f])
