#! /usr/bin/env python
__author__ = "Alexander Merritt"
__email__ = "merritt.alex@gatech.edu"

import os
import commands
import sys

gcc = 'gcc'

mpi_path = os.getenv('MPI_PATH')
libpath = [str(mpi_path) + '/lib']

ccflags = ['-Wall', '-Wextra', '-Werror', '-Winline']
ccflags.extend(['-Wno-unused-parameter', '-Wno-unused-function'])

#cpath = ['../inc']
cpath = [os.getcwd() + '/../inc']
libpath.extend(['../lib'])

libs = ['ocm', 'rt','mpi']


if int(ARGUMENTS.get('timing', 0)): # add timing macro to allow for use of in-place timers
      ccflags.extend(['-DTIMING'])

if int(ARGUMENTS.get('filter', 0)): # prefix gccfilter to assist with compilation
    gcc = gccfilter + gcc

if int(ARGUMENTS.get('dbg', 0)): # 
    ccflags.append(['-ggdb', '-O0'])
elif int(ARGUMENTS.get('mpidbg', 0)): # 
    ccflags.append(['-ggdb', '-O0'])
else:
    ccflags.extend(['-O3'])

if int(ARGUMENTS.get('ib', 0)): # specify IB or EXTOLL compilation path
    compilepath = 'ib'
    ccflags.extend(['-DINFINIBAND'])
elif int(ARGUMENTS.get('extoll', 0)):
    compilepath = 'extoll'
    ccflags.extend(['-DEXTOLL'])
else:
    compilepath = 'all'
    ccflags.extend(['-DINFINIBAND','-DEXTOLL'])

#Add RMA libs if EXTOLL network is supported
#librma2 is located at /extoll2/lib/librma2.so
if compilepath == 'ib':
  extoll_libs = ['']
else:
  libs.extend(['librma2'])
  libpath.extend(['/extoll2/lib'])

env = Environment(CC = gcc, CCFLAGS = ccflags, CPPPATH = cpath)
env.Append(LIBPATH = libpath, LIBS = libs)

files = os.listdir('.')
for f in files:
    (name,ext) = os.path.splitext(f)
    if 'ib' in name and compilepath == 'extoll':
        continue
    elif 'extoll' in name and compilepath == 'ib':
        continue
    elif '.c' == ext.lower():
        bin = env.Program(name, [f])
